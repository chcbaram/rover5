   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.LED_Tick,"ax",%progbits
  19              		.align	2
  20              		.global	LED_Tick
  21              		.thumb
  22              		.thumb_func
  24              	LED_Tick:
  25              	.LFB0:
  26              		.file 1 "../main.c"
   1:../main.c     **** //----------------------------------------------------------------------------
   2:../main.c     **** //    프로그램명 	: Rover5
   3:../main.c     **** //
   4:../main.c     **** //    만든이     	: Cho Han Cheol (Baram)
   5:../main.c     **** //
   6:../main.c     **** //    날  짜     	: 2013.10.14.
   7:../main.c     **** //
   8:../main.c     **** //    최종 수정  	:
   9:../main.c     **** //
  10:../main.c     **** //    MPU_Type	:
  11:../main.c     **** //
  12:../main.c     **** //    파일명     	: Main.c
  13:../main.c     **** //----------------------------------------------------------------------------
  14:../main.c     **** /*
  15:../main.c     **** 	131014 
  16:../main.c     **** 		- 초기 프로젝트 작업 시작		
  17:../main.c     **** */
  18:../main.c     **** 
  19:../main.c     **** 
  20:../main.c     **** 
  21:../main.c     **** 
  22:../main.c     **** //----- 헤더파일 열기
  23:../main.c     **** //
  24:../main.c     **** #define  MAIN_LOCAL
  25:../main.c     **** 
  26:../main.c     **** #include "main.h"
  27:../main.c     **** 
  28:../main.c     **** 
  29:../main.c     **** 
  30:../main.c     **** 
  31:../main.c     **** //-- 내부 선언
  32:../main.c     **** //
  33:../main.c     **** #define DCM_RU	3
  34:../main.c     **** #define DCM_RD	1
  35:../main.c     **** #define DCM_LU	2
  36:../main.c     **** #define DCM_LD	0
  37:../main.c     **** 
  38:../main.c     **** 
  39:../main.c     **** //-- 내부 변수
  40:../main.c     **** //
  41:../main.c     **** 
  42:../main.c     **** 
  43:../main.c     **** 
  44:../main.c     **** //-- 내부 함수
  45:../main.c     **** //
  46:../main.c     **** static void Main_Init( void );
  47:../main.c     **** 
  48:../main.c     **** void Test_DCMOTOR();
  49:../main.c     **** 
  50:../main.c     **** 
  51:../main.c     **** 
  52:../main.c     **** void LED_Tick( void )
  53:../main.c     **** {
  27              		.loc 1 53 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  54:../main.c     **** 	Hw_Led_Toggle(0);
  36              		.loc 1 54 0
  37 0002 40F20003 		movw	r3, #:lower16:Hw_Led_Toggle
  38 0006 0020     		movs	r0, #0
  39 0008 C0F20003 		movt	r3, #:upper16:Hw_Led_Toggle
  40 000c 9847     		blx	r3
  41              	.LVL0:
  42 000e 08BD     		pop	{r3, pc}
  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text.startup.main,"ax",%progbits
  47              		.align	2
  48              		.global	main
  49              		.thumb
  50              		.thumb_func
  52              	main:
  53              	.LFB1:
  55:../main.c     **** }
  56:../main.c     **** 
  57:../main.c     **** 
  58:../main.c     **** 
  59:../main.c     **** /*---------------------------------------------------------------------------
  60:../main.c     ****      TITLE   :	main          
  61:../main.c     ****      WORK    : 	
  62:../main.c     ****      			메인 함수
  63:../main.c     ****      ARG     : 	void
  64:../main.c     ****      RET     : 	
  65:../main.c     ****      			int
  66:../main.c     **** ---------------------------------------------------------------------------*/
  67:../main.c     **** int main(void)
  68:../main.c     **** {
  54              		.loc 1 68 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 36
  61              		.cfi_offset 4, -36
  62              		.cfi_offset 5, -32
  63              		.cfi_offset 6, -28
  64              		.cfi_offset 7, -24
  65              		.cfi_offset 8, -20
  66              		.cfi_offset 9, -16
  67              		.cfi_offset 10, -12
  68              		.cfi_offset 11, -8
  69              		.cfi_offset 14, -4
  70              	.LBB4:
  71              	.LBB5:
  69:../main.c     **** 	
  70:../main.c     **** 	Main_Init();
  71:../main.c     **** 
  72:../main.c     **** 	//-- 명령어 처리
  73:../main.c     **** 	//
  74:../main.c     **** 	//Ap_RadioMenu_ExeCmd();    
  75:../main.c     **** 	//Ap_GLcdMenu_ExeCmd();    
  76:../main.c     **** 	//Ap_EduMenu_ExeCmd();
  77:../main.c     **** 
  78:../main.c     **** 	Lb_printf("ezExplorer\n");
  79:../main.c     ****     while(1)
  80:../main.c     ****     {
  81:../main.c     ****     	//Test_DCMOTOR();
  82:../main.c     ****     	Ap_StrCmd_ExeCmd();
  83:../main.c     **** 
  84:../main.c     ****     	//-- 주기적인 전송 신호 전달
  85:../main.c     ****     	//
  86:../main.c     ****     	if( (Hw_Timer_Get_CountValue()%100) == 0 )
  87:../main.c     ****     	{ 
  88:../main.c     ****     		Ap_StrCmd_SendInfo( ERR_NONE, "SONIC %d %d\n", Hw_Sonic_GetDistanceMM(0), Hw_Sonic_GetDistanc
  89:../main.c     ****     	}
  90:../main.c     ****     }
  91:../main.c     ****     
  92:../main.c     **** 
  93:../main.c     **** 
  94:../main.c     ****     return 0;
  95:../main.c     **** }
  96:../main.c     **** 
  97:../main.c     **** 
  98:../main.c     **** 
  99:../main.c     **** 
 100:../main.c     **** 
 101:../main.c     **** /*---------------------------------------------------------------------------
 102:../main.c     ****      TITLE   : Main_Init
 103:../main.c     ****      WORK    :
 104:../main.c     ****      ARG     : void
 105:../main.c     ****      RET     : void
 106:../main.c     **** ---------------------------------------------------------------------------*/
 107:../main.c     **** void Main_Init( void )
 108:../main.c     **** {
 109:../main.c     **** 	Hw_Init();
  72              		.loc 1 109 0
  73 0004 194B     		ldr	r3, .L9
  74              	.LBE5:
  75              	.LBE4:
  68:../main.c     **** {
  76              		.loc 1 68 0
  77 0006 83B0     		sub	sp, sp, #12
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 48
  80              	.LBB7:
  81              	.LBB6:
  82              		.loc 1 109 0
  83 0008 9847     		blx	r3
  84              	.LVL1:
 110:../main.c     **** 	Ap_Init();
 111:../main.c     **** 	
 112:../main.c     **** 	Hw_Timer_Set  ( HW_TIMER_CH_LED, 1000, LOOP_TIME, LED_Tick, NULL );
  85              		.loc 1 112 0
  86 000a 0024     		movs	r4, #0
 110:../main.c     **** 	Ap_Init();
  87              		.loc 1 110 0
  88 000c 1848     		ldr	r0, .L9+4
  89 000e 8047     		blx	r0
  90              	.LVL2:
  91              		.loc 1 112 0
  92 0010 184D     		ldr	r5, .L9+8
  93 0012 0222     		movs	r2, #2
  94 0014 184B     		ldr	r3, .L9+12
  95 0016 4FF47A71 		mov	r1, #1000
  96 001a 2046     		mov	r0, r4
  97 001c 0094     		str	r4, [sp, #0]
  98 001e A847     		blx	r5
  99              	.LVL3:
 113:../main.c     **** 	Hw_Timer_Start( HW_TIMER_CH_LED );	
 100              		.loc 1 113 0
 101 0020 2046     		mov	r0, r4
 102 0022 1649     		ldr	r1, .L9+16
 103 0024 8847     		blx	r1
 104              	.LVL4:
 105              	.LBE6:
 106              	.LBE7:
  78:../main.c     **** 	Lb_printf("ezExplorer\n");
 107              		.loc 1 78 0
 108 0026 1648     		ldr	r0, .L9+20
 109 0028 164A     		ldr	r2, .L9+24
 110 002a 9047     		blx	r2
 111              	.LVL5:
  86:../main.c     ****     	if( (Hw_Timer_Get_CountValue()%100) == 0 )
 112              		.loc 1 86 0
 113 002c 48F21F55 		movw	r5, #34079
 114 0030 DFF85C80 		ldr	r8, .L9+36
 115 0034 144F     		ldr	r7, .L9+28
 116 0036 DFF85C90 		ldr	r9, .L9+40
 117 003a DFF85CA0 		ldr	sl, .L9+44
 118 003e C5F2EB15 		movt	r5, 20971
 119 0042 6426     		movs	r6, #100
 120              	.L7:
  82:../main.c     ****     	Ap_StrCmd_ExeCmd();
 121              		.loc 1 82 0
 122 0044 C047     		blx	r8
 123              	.LVL6:
  86:../main.c     ****     	if( (Hw_Timer_Get_CountValue()%100) == 0 )
 124              		.loc 1 86 0
 125 0046 B847     		blx	r7
 126              	.LVL7:
 127 0048 A5FB0034 		umull	r3, r4, r5, r0
 128 004c 6309     		lsrs	r3, r4, #5
 129 004e 06FB1304 		mls	r4, r6, r3, r0
 130 0052 002C     		cmp	r4, #0
 131 0054 F6D1     		bne	.L7
  88:../main.c     ****     		Ap_StrCmd_SendInfo( ERR_NONE, "SONIC %d %d\n", Hw_Sonic_GetDistanceMM(0), Hw_Sonic_GetDistanc
 132              		.loc 1 88 0
 133 0056 2046     		mov	r0, r4
 134 0058 C847     		blx	r9
 135              	.LVL8:
 136 005a 8346     		mov	fp, r0
 137 005c 0120     		movs	r0, #1
 138 005e C847     		blx	r9
 139              	.LVL9:
 140 0060 0A49     		ldr	r1, .L9+32
 141 0062 0346     		mov	r3, r0
 142 0064 5A46     		mov	r2, fp
 143 0066 2046     		mov	r0, r4
 144 0068 D047     		blx	sl
 145              	.LVL10:
 146 006a EBE7     		b	.L7
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 006c 00000000 		.word	Hw_Init
 151 0070 00000000 		.word	Ap_Init
 152 0074 00000000 		.word	Hw_Timer_Set
 153 0078 00000000 		.word	LED_Tick
 154 007c 00000000 		.word	Hw_Timer_Start
 155 0080 00000000 		.word	.LC0
 156 0084 00000000 		.word	Lb_printf
 157 0088 00000000 		.word	Hw_Timer_Get_CountValue
 158 008c 0C000000 		.word	.LC1
 159 0090 00000000 		.word	Ap_StrCmd_ExeCmd
 160 0094 00000000 		.word	Hw_Sonic_GetDistanceMM
 161 0098 00000000 		.word	Ap_StrCmd_SendInfo
 162              		.cfi_endproc
 163              	.LFE1:
 165              		.section	.text.Test_DCMOTOR,"ax",%progbits
 166              		.align	2
 167              		.global	Test_DCMOTOR
 168              		.thumb
 169              		.thumb_func
 171              	Test_DCMOTOR:
 172              	.LFB3:
 114:../main.c     **** }
 115:../main.c     **** 
 116:../main.c     **** 
 117:../main.c     **** 
 118:../main.c     **** 
 119:../main.c     **** 
 120:../main.c     **** void Test_DCMOTOR()
 121:../main.c     **** {
 173              		.loc 1 121 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 122:../main.c     **** 	u8  Ch;
 123:../main.c     **** 	static s16 Pwm = 0;
 124:../main.c     **** 
 125:../main.c     **** 	Ch = Hw_Uart_Getch( 0 );
 177              		.loc 1 125 0
 178 0000 0020     		movs	r0, #0
 121:../main.c     **** {
 179              		.loc 1 121 0
 180 0002 10B5     		push	{r4, lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185              		.loc 1 125 0
 186 0004 2A4B     		ldr	r3, .L29
 187 0006 9847     		blx	r3
 188              	.LVL11:
 126:../main.c     **** 
 127:../main.c     **** 	if( Ch == 'i' )
 189              		.loc 1 127 0
 190 0008 6928     		cmp	r0, #105
 191 000a 24D0     		beq	.L23
 128:../main.c     **** 	{
 129:../main.c     **** 		Hw_DcMotor_Handle( Pwm, Pwm );
 130:../main.c     **** 	}
 131:../main.c     **** 	else if( Ch == ',' )
 192              		.loc 1 131 0
 193 000c 2C28     		cmp	r0, #44
 194 000e 2ED0     		beq	.L24
 132:../main.c     **** 	{
 133:../main.c     **** 		Hw_DcMotor_Handle( -Pwm, -Pwm );
 134:../main.c     **** 	}
 135:../main.c     **** 	else if( Ch == 'j' )
 195              		.loc 1 135 0
 196 0010 6A28     		cmp	r0, #106
 197 0012 36D0     		beq	.L25
 136:../main.c     **** 	{
 137:../main.c     **** 		Hw_DcMotor_Handle( -Pwm, Pwm );
 138:../main.c     **** 	}
 139:../main.c     **** 	else if( Ch == 'l' )
 198              		.loc 1 139 0
 199 0014 6C28     		cmp	r0, #108
 200 0016 3ED0     		beq	.L26
 140:../main.c     **** 	{
 141:../main.c     **** 		Hw_DcMotor_Handle( Pwm, -Pwm );
 142:../main.c     **** 	}
 143:../main.c     **** 	else if( Ch == 'k' )
 201              		.loc 1 143 0
 202 0018 6B28     		cmp	r0, #107
 203 001a 40D0     		beq	.L27
 144:../main.c     **** 	{
 145:../main.c     **** 		Hw_DcMotor_Handle( 0, 0 );
 146:../main.c     **** 	}
 147:../main.c     **** 	else if( Ch == 'q' )
 204              		.loc 1 147 0
 205 001c 7128     		cmp	r0, #113
 148:../main.c     **** 	{
 149:../main.c     **** 		Pwm += 10;
 206              		.loc 1 149 0
 207 001e 254B     		ldr	r3, .L29+4
 147:../main.c     **** 	else if( Ch == 'q' )
 208              		.loc 1 147 0
 209 0020 08D0     		beq	.L28
 150:../main.c     **** 
 151:../main.c     **** 		if( Pwm > 100 ) Pwm = 100;
 152:../main.c     **** 
 153:../main.c     **** 	}
 154:../main.c     **** 	else if( Ch == 'a' )
 210              		.loc 1 154 0
 211 0022 6128     		cmp	r0, #97
 212 0024 0ED0     		beq	.L20
 213 0026 B3F90020 		ldrsh	r2, [r3, #0]
 214              	.LVL12:
 215              	.L13:
 155:../main.c     **** 	{
 156:../main.c     **** 		if( Pwm >= 10 ) Pwm -= 10;
 157:../main.c     **** 	}
 158:../main.c     **** 
 159:../main.c     **** 	Hw_Uart_Print( 0, "Pwm %d\n", Pwm );
 216              		.loc 1 159 0
 217 002a 0020     		movs	r0, #0
 218 002c 2249     		ldr	r1, .L29+8
 219 002e 234B     		ldr	r3, .L29+12
 220 0030 9847     		blx	r3
 221              	.LVL13:
 222 0032 10BD     		pop	{r4, pc}
 223              	.LVL14:
 224              	.L28:
 149:../main.c     **** 		Pwm += 10;
 225              		.loc 1 149 0
 226 0034 1888     		ldrh	r0, [r3, #0]
 227              	.LVL15:
 228 0036 0A30     		adds	r0, r0, #10
 229 0038 81B2     		uxth	r1, r0
 151:../main.c     **** 		if( Pwm > 100 ) Pwm = 100;
 230              		.loc 1 151 0
 231 003a 0AB2     		sxth	r2, r1
 232 003c 642A     		cmp	r2, #100
 233 003e 13DC     		bgt	.L19
 149:../main.c     **** 		Pwm += 10;
 234              		.loc 1 149 0
 235 0040 1980     		strh	r1, [r3, #0]	@ movhi
 236 0042 F2E7     		b	.L13
 237              	.LVL16:
 238              	.L20:
 156:../main.c     **** 		if( Pwm >= 10 ) Pwm -= 10;
 239              		.loc 1 156 0
 240 0044 1988     		ldrh	r1, [r3, #0]
 241 0046 0AB2     		sxth	r2, r1
 242 0048 092A     		cmp	r2, #9
 243 004a EEDD     		ble	.L13
 156:../main.c     **** 		if( Pwm >= 10 ) Pwm -= 10;
 244              		.loc 1 156 0 is_stmt 0 discriminator 1
 245 004c A1F10A02 		sub	r2, r1, #10
 246 0050 92B2     		uxth	r2, r2
 247 0052 1A80     		strh	r2, [r3, #0]	@ movhi
 248 0054 E9E7     		b	.L13
 249              	.L23:
 129:../main.c     **** 		Hw_DcMotor_Handle( Pwm, Pwm );
 250              		.loc 1 129 0 is_stmt 1
 251 0056 174C     		ldr	r4, .L29+4
 252 0058 194A     		ldr	r2, .L29+16
 253 005a B4F90000 		ldrsh	r0, [r4, #0]
 254              	.LVL17:
 255 005e 0146     		mov	r1, r0
 256 0060 9047     		blx	r2
 257              	.LVL18:
 258 0062 B4F90020 		ldrsh	r2, [r4, #0]
 259 0066 E0E7     		b	.L13
 260              	.L19:
 151:../main.c     **** 		if( Pwm > 100 ) Pwm = 100;
 261              		.loc 1 151 0 discriminator 1
 262 0068 6422     		movs	r2, #100
 263 006a 1A80     		strh	r2, [r3, #0]	@ movhi
 264 006c DDE7     		b	.L13
 265              	.LVL19:
 266              	.L24:
 133:../main.c     **** 		Hw_DcMotor_Handle( -Pwm, -Pwm );
 267              		.loc 1 133 0
 268 006e 114C     		ldr	r4, .L29+4
 269 0070 134B     		ldr	r3, .L29+16
 270 0072 2288     		ldrh	r2, [r4, #0]
 271 0074 5042     		negs	r0, r2
 272              	.LVL20:
 273 0076 00B2     		sxth	r0, r0
 274 0078 0146     		mov	r1, r0
 275 007a 9847     		blx	r3
 276              	.LVL21:
 277 007c B4F90020 		ldrsh	r2, [r4, #0]
 278 0080 D3E7     		b	.L13
 279              	.LVL22:
 280              	.L25:
 137:../main.c     **** 		Hw_DcMotor_Handle( -Pwm, Pwm );
 281              		.loc 1 137 0
 282 0082 0C4C     		ldr	r4, .L29+4
 283 0084 2188     		ldrh	r1, [r4, #0]
 284 0086 4842     		negs	r0, r1
 285              	.LVL23:
 286              	.L22:
 141:../main.c     **** 		Hw_DcMotor_Handle( Pwm, -Pwm );
 287              		.loc 1 141 0
 288 0088 00B2     		sxth	r0, r0
 289 008a 09B2     		sxth	r1, r1
 290 008c 0C4B     		ldr	r3, .L29+16
 291 008e 9847     		blx	r3
 292              	.LVL24:
 293 0090 B4F90020 		ldrsh	r2, [r4, #0]
 294 0094 C9E7     		b	.L13
 295              	.LVL25:
 296              	.L26:
 297 0096 074C     		ldr	r4, .L29+4
 298 0098 2088     		ldrh	r0, [r4, #0]
 299              	.LVL26:
 300 009a 4142     		negs	r1, r0
 301 009c F4E7     		b	.L22
 302              	.LVL27:
 303              	.L27:
 145:../main.c     **** 		Hw_DcMotor_Handle( 0, 0 );
 304              		.loc 1 145 0
 305 009e 0020     		movs	r0, #0
 306              	.LVL28:
 307 00a0 0146     		mov	r1, r0
 308 00a2 074B     		ldr	r3, .L29+16
 309 00a4 9847     		blx	r3
 310              	.LVL29:
 311 00a6 034A     		ldr	r2, .L29+4
 312 00a8 B2F90020 		ldrsh	r2, [r2, #0]
 313 00ac BDE7     		b	.L13
 314              	.L30:
 315 00ae 00BF     		.align	2
 316              	.L29:
 317 00b0 00000000 		.word	Hw_Uart_Getch
 318 00b4 00000000 		.word	.LANCHOR0
 319 00b8 1C000000 		.word	.LC2
 320 00bc 00000000 		.word	Hw_Uart_Print
 321 00c0 00000000 		.word	Hw_DcMotor_Handle
 322              		.cfi_endproc
 323              	.LFE3:
 325              		.section	.bss.Pwm.4563,"aw",%nobits
 326              		.align	1
 327              		.set	.LANCHOR0,. + 0
 330              	Pwm.4563:
 331 0000 0000     		.space	2
 332              		.section	.rodata.str1.4,"aMS",%progbits,1
 333              		.align	2
 334              	.LC0:
 335 0000 657A4578 		.ascii	"ezExplorer\012\000"
 335      706C6F72 
 335      65720A00 
 336              	.LC1:
 337 000c 534F4E49 		.ascii	"SONIC %d %d\012\000"
 337      43202564 
 337      2025640A 
 337      00
 338 0019 000000   		.space	3
 339              	.LC2:
 340 001c 50776D20 		.ascii	"Pwm %d\012\000"
 340      25640A00 
 341              		.text
 342              	.Letext0:
 343              		.file 2 "../LIB_HW/Hw_Define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:19     .text.LED_Tick:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:24     .text.LED_Tick:0000000000000000 LED_Tick
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:47     .text.startup.main:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:52     .text.startup.main:0000000000000000 main
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:150    .text.startup.main:000000000000006c $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:166    .text.Test_DCMOTOR:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:171    .text.Test_DCMOTOR:0000000000000000 Test_DCMOTOR
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:317    .text.Test_DCMOTOR:00000000000000b0 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:326    .bss.Pwm.4563:0000000000000000 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:330    .bss.Pwm.4563:0000000000000000 Pwm.4563
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//cc0AA1fa.s:333    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Hw_Led_Toggle
Hw_Init
Ap_Init
Hw_Timer_Set
Hw_Timer_Start
Lb_printf
Hw_Timer_Get_CountValue
Ap_StrCmd_ExeCmd
Hw_Sonic_GetDistanceMM
Ap_StrCmd_SendInfo
Hw_Uart_Getch
Hw_Uart_Print
Hw_DcMotor_Handle
