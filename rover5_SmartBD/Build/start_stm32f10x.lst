   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Hw_Pwm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Hw_Pwm_IO_Setup,"ax",%progbits
  19              		.align	2
  20              		.global	Hw_Pwm_IO_Setup
  21              		.thumb
  22              		.thumb_func
  24              	Hw_Pwm_IO_Setup:
  25              	.LFB1:
  26              		.file 1 "../LIB_HW/Hw_Pwm.c"
   1:../LIB_HW/Hw_Pwm.c **** //----------------------------------------------------------------------------
   2:../LIB_HW/Hw_Pwm.c **** //    프로그램명 : PWM 관련 함수
   3:../LIB_HW/Hw_Pwm.c **** //
   4:../LIB_HW/Hw_Pwm.c **** //    만든이     : Cho Han Cheol 
   5:../LIB_HW/Hw_Pwm.c **** //
   6:../LIB_HW/Hw_Pwm.c **** //    날  짜     : 
   7:../LIB_HW/Hw_Pwm.c **** //    
   8:../LIB_HW/Hw_Pwm.c **** //    최종 수정  : 
   9:../LIB_HW/Hw_Pwm.c **** //
  10:../LIB_HW/Hw_Pwm.c **** //    MPU_Type   : 
  11:../LIB_HW/Hw_Pwm.c **** //
  12:../LIB_HW/Hw_Pwm.c **** //    파일명     : Hw_Pwm.c
  13:../LIB_HW/Hw_Pwm.c **** //----------------------------------------------------------------------------
  14:../LIB_HW/Hw_Pwm.c **** 
  15:../LIB_HW/Hw_Pwm.c **** 
  16:../LIB_HW/Hw_Pwm.c **** 
  17:../LIB_HW/Hw_Pwm.c **** //----- 헤더파일 열기
  18:../LIB_HW/Hw_Pwm.c **** //
  19:../LIB_HW/Hw_Pwm.c **** #define  HW_PWM_LOCAL  
  20:../LIB_HW/Hw_Pwm.c **** 
  21:../LIB_HW/Hw_Pwm.c **** #include "Hw_Pwm.h"
  22:../LIB_HW/Hw_Pwm.c **** 
  23:../LIB_HW/Hw_Pwm.c **** 
  24:../LIB_HW/Hw_Pwm.c **** 
  25:../LIB_HW/Hw_Pwm.c **** 
  26:../LIB_HW/Hw_Pwm.c **** 
  27:../LIB_HW/Hw_Pwm.c **** 
  28:../LIB_HW/Hw_Pwm.c **** //----- 내부 함수
  29:../LIB_HW/Hw_Pwm.c **** //
  30:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_IO_Setup(void);
  31:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_Timer_Setup(void);
  32:../LIB_HW/Hw_Pwm.c **** 
  33:../LIB_HW/Hw_Pwm.c **** 
  34:../LIB_HW/Hw_Pwm.c **** 
  35:../LIB_HW/Hw_Pwm.c **** //----- 내부 변수
  36:../LIB_HW/Hw_Pwm.c **** 
  37:../LIB_HW/Hw_Pwm.c **** 
  38:../LIB_HW/Hw_Pwm.c **** 
  39:../LIB_HW/Hw_Pwm.c **** 
  40:../LIB_HW/Hw_Pwm.c **** 
  41:../LIB_HW/Hw_Pwm.c **** 
  42:../LIB_HW/Hw_Pwm.c **** 
  43:../LIB_HW/Hw_Pwm.c **** 
  44:../LIB_HW/Hw_Pwm.c **** 
  45:../LIB_HW/Hw_Pwm.c **** 
  46:../LIB_HW/Hw_Pwm.c **** 
  47:../LIB_HW/Hw_Pwm.c **** /*---------------------------------------------------------------------------
  48:../LIB_HW/Hw_Pwm.c ****      TITLE   : Hw_Pwm_Init
  49:../LIB_HW/Hw_Pwm.c ****      WORK    : 
  50:../LIB_HW/Hw_Pwm.c ****      ARG     : void
  51:../LIB_HW/Hw_Pwm.c ****      RET     : void
  52:../LIB_HW/Hw_Pwm.c **** ---------------------------------------------------------------------------*/
  53:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_Init(void)
  54:../LIB_HW/Hw_Pwm.c **** {	
  55:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_IO_Setup();
  56:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_Timer_Setup();
  57:../LIB_HW/Hw_Pwm.c **** }
  58:../LIB_HW/Hw_Pwm.c **** 
  59:../LIB_HW/Hw_Pwm.c **** 
  60:../LIB_HW/Hw_Pwm.c **** 
  61:../LIB_HW/Hw_Pwm.c **** 
  62:../LIB_HW/Hw_Pwm.c **** 
  63:../LIB_HW/Hw_Pwm.c **** /*---------------------------------------------------------------------------
  64:../LIB_HW/Hw_Pwm.c ****      TITLE   : Hw_Pwm_Timer_Setup
  65:../LIB_HW/Hw_Pwm.c ****      WORK    : 
  66:../LIB_HW/Hw_Pwm.c ****      ARG     : void
  67:../LIB_HW/Hw_Pwm.c ****      RET     : void
  68:../LIB_HW/Hw_Pwm.c **** ---------------------------------------------------------------------------*/
  69:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_IO_Setup(void)
  70:../LIB_HW/Hw_Pwm.c **** {	
  27              		.loc 1 70 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  71:../LIB_HW/Hw_Pwm.c **** 	//-- GPIO 설정
  72:../LIB_HW/Hw_Pwm.c **** 	//
  73:../LIB_HW/Hw_Pwm.c **** 	//-- PWM0 PB.0
  74:../LIB_HW/Hw_Pwm.c **** 	//
  75:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL &= ~(0x0F << ( 0));	// Clear
  32              		.loc 1 75 0
  33 0000 4FF44063 		mov	r3, #3072
  34 0004 C4F20103 		movt	r3, 16385
  35 0008 1A68     		ldr	r2, [r3, #0]
  36 000a 22F00F00 		bic	r0, r2, #15
  37 000e 1860     		str	r0, [r3, #0]
  76:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL |=  (0x03 << ( 0));	// MODE, PB.0 Output mode, max speed 50Mhz
  38              		.loc 1 76 0
  39 0010 1968     		ldr	r1, [r3, #0]
  40 0012 41F00302 		orr	r2, r1, #3
  41 0016 1A60     		str	r2, [r3, #0]
  77:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL |=  (0x02 << ( 2));	// CNF,  PB.0 Alternate function output Push-pull
  42              		.loc 1 77 0
  43 0018 1868     		ldr	r0, [r3, #0]
  44 001a 40F00801 		orr	r1, r0, #8
  45 001e 1960     		str	r1, [r3, #0]
  78:../LIB_HW/Hw_Pwm.c **** 
  79:../LIB_HW/Hw_Pwm.c **** 	//-- PWM1 PB.1
  80:../LIB_HW/Hw_Pwm.c **** 	//
  81:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL &= ~(0x0F << ( 4));	// Clear
  46              		.loc 1 81 0
  47 0020 1A68     		ldr	r2, [r3, #0]
  48 0022 22F0F000 		bic	r0, r2, #240
  49 0026 1860     		str	r0, [r3, #0]
  82:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL |=  (0x03 << ( 4));	// MODE, PB.1 Output mode, max speed 50Mhz
  50              		.loc 1 82 0
  51 0028 1968     		ldr	r1, [r3, #0]
  52 002a 41F03002 		orr	r2, r1, #48
  53 002e 1A60     		str	r2, [r3, #0]
  83:../LIB_HW/Hw_Pwm.c **** 	REG_GPIOB_CRL |=  (0x02 << ( 6));	// CNF,  PB.1 Alternate function output Push-pull
  54              		.loc 1 83 0
  55 0030 1868     		ldr	r0, [r3, #0]
  56 0032 40F08001 		orr	r1, r0, #128
  57 0036 1960     		str	r1, [r3, #0]
  58 0038 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE1:
  62 003a 00BF     		.section	.text.Hw_Pwm_Timer_Setup,"ax",%progbits
  63              		.align	2
  64              		.global	Hw_Pwm_Timer_Setup
  65              		.thumb
  66              		.thumb_func
  68              	Hw_Pwm_Timer_Setup:
  69              	.LFB2:
  84:../LIB_HW/Hw_Pwm.c **** }
  85:../LIB_HW/Hw_Pwm.c **** 
  86:../LIB_HW/Hw_Pwm.c **** 
  87:../LIB_HW/Hw_Pwm.c **** 
  88:../LIB_HW/Hw_Pwm.c **** 
  89:../LIB_HW/Hw_Pwm.c **** 
  90:../LIB_HW/Hw_Pwm.c **** /*---------------------------------------------------------------------------
  91:../LIB_HW/Hw_Pwm.c ****      TITLE   : Hw_Pwm_Timer_Setup
  92:../LIB_HW/Hw_Pwm.c ****      WORK    : 
  93:../LIB_HW/Hw_Pwm.c ****      ARG     : void
  94:../LIB_HW/Hw_Pwm.c ****      RET     : void
  95:../LIB_HW/Hw_Pwm.c **** ---------------------------------------------------------------------------*/
  96:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_Timer_Setup(void)
  97:../LIB_HW/Hw_Pwm.c **** {	
  70              		.loc 1 97 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  98:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_RCC_APB1ENR, 1 );		// TIM3 Clock Enable APB1*2 = 72Mhz
  75              		.loc 1 98 0
  76 0000 41F21C00 		movw	r0, #4124
  77 0004 C4F20200 		movt	r0, 16386
  78 0008 0368     		ldr	r3, [r0, #0]
  97:../LIB_HW/Hw_Pwm.c **** {	
  79              		.loc 1 97 0
  80 000a F0B4     		push	{r4, r5, r6, r7}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 4, -16
  84              		.cfi_offset 5, -12
  85              		.cfi_offset 6, -8
  86              		.cfi_offset 7, -4
  87              		.loc 1 98 0
  88 000c 43F0020C 		orr	ip, r3, #2
  99:../LIB_HW/Hw_Pwm.c **** 
 100:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_PSC = (72*8)-1; 				// 72Mhz/(72*4) = 1Mhz
  89              		.loc 1 100 0
  90 0010 4FF48567 		mov	r7, #1064
  98:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_RCC_APB1ENR, 1 );		// TIM3 Clock Enable APB1*2 = 72Mhz
  91              		.loc 1 98 0
  92 0014 C0F800C0 		str	ip, [r0, #0]
 101:../LIB_HW/Hw_Pwm.c **** 
 102:../LIB_HW/Hw_Pwm.c **** 
 103:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CR1 = ( 1<< 7 );			// TIMx_ARR register is buffered 
  93              		.loc 1 103 0
  94 0018 4FF48062 		mov	r2, #1024
 100:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_PSC = (72*8)-1; 				// 72Mhz/(72*4) = 1Mhz
  95              		.loc 1 100 0
  96 001c 40F23F20 		movw	r0, #575
  97 0020 C4F20007 		movt	r7, 16384
  98 0024 3860     		str	r0, [r7, #0]
  99              		.loc 1 103 0
 100 0026 C4F20002 		movt	r2, 16384
 101 002a 8020     		movs	r0, #128
 104:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CR2 = 0;					
 102              		.loc 1 104 0
 103 002c 40F20446 		movw	r6, #1028
 105:../LIB_HW/Hw_Pwm.c **** 
 106:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CCMR2 = 0 
 104              		.loc 1 106 0
 105 0030 40F21C45 		movw	r5, #1052
 103:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CR1 = ( 1<< 7 );			// TIMx_ARR register is buffered 
 106              		.loc 1 103 0
 107 0034 1060     		str	r0, [r2, #0]
 104:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CR2 = 0;					
 108              		.loc 1 104 0
 109 0036 0021     		movs	r1, #0
 110              		.loc 1 106 0
 111 0038 C4F20005 		movt	r5, 16384
 112 003c 46F66800 		movw	r0, #26728
 107:../LIB_HW/Hw_Pwm.c **** 		| ( 0x06 <<  4)					// OE3
 108:../LIB_HW/Hw_Pwm.c **** 		| ( 1    <<  3)					// OC3PE Output compare3 preload enable
 109:../LIB_HW/Hw_Pwm.c **** 		| ( 0x06 << 12)					// OE4
 110:../LIB_HW/Hw_Pwm.c **** 		| ( 1    << 11);				// OC4PE Output compare3 preload enable
 111:../LIB_HW/Hw_Pwm.c **** 	
 112:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_ARR = HW_PWM_PERIOD-1;		// 1000us = 1Khz 	
 113              		.loc 1 112 0
 114 0040 40F22C44 		movw	r4, #1068
 104:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CR2 = 0;					
 115              		.loc 1 104 0
 116 0044 C4F20006 		movt	r6, 16384
 117 0048 3160     		str	r1, [r6, #0]
 118              		.loc 1 112 0
 119 004a C4F20004 		movt	r4, 16384
 106:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_CCMR2 = 0 
 120              		.loc 1 106 0
 121 004e 2860     		str	r0, [r5, #0]
 113:../LIB_HW/Hw_Pwm.c **** 
 114:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER,  8 );		// CC3E : Enable
 122              		.loc 1 114 0
 123 0050 4FF48463 		mov	r3, #1056
 112:../LIB_HW/Hw_Pwm.c **** 	REG_TIM3_ARR = HW_PWM_PERIOD-1;		// 1000us = 1Khz 	
 124              		.loc 1 112 0
 125 0054 40F2E735 		movw	r5, #999
 126 0058 2560     		str	r5, [r4, #0]
 127              		.loc 1 114 0
 128 005a C4F20003 		movt	r3, 16384
 129 005e 1868     		ldr	r0, [r3, #0]
 130              	.LBB8:
 131              	.LBB9:
 115:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER, 12 );		// CC4E : Enable
 116:../LIB_HW/Hw_Pwm.c **** 
 117:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_SetDuty(0, 0);
 118:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_SetDuty(1, 0);
 119:../LIB_HW/Hw_Pwm.c **** 
 120:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CR1, 0 );			// Counter Enable 
 121:../LIB_HW/Hw_Pwm.c **** }
 122:../LIB_HW/Hw_Pwm.c **** 
 123:../LIB_HW/Hw_Pwm.c **** 
 124:../LIB_HW/Hw_Pwm.c **** 
 125:../LIB_HW/Hw_Pwm.c **** 
 126:../LIB_HW/Hw_Pwm.c **** 
 127:../LIB_HW/Hw_Pwm.c **** /*---------------------------------------------------------------------------
 128:../LIB_HW/Hw_Pwm.c ****      TITLE   : Hw_Pwm_SetDuty
 129:../LIB_HW/Hw_Pwm.c ****      WORK    : 
 130:../LIB_HW/Hw_Pwm.c ****      ARG     : void
 131:../LIB_HW/Hw_Pwm.c ****      RET     : void
 132:../LIB_HW/Hw_Pwm.c **** ---------------------------------------------------------------------------*/
 133:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_SetDuty( u8 Ch, u16 DutyRatio )
 134:../LIB_HW/Hw_Pwm.c **** {
 135:../LIB_HW/Hw_Pwm.c **** 	switch( Ch )
 136:../LIB_HW/Hw_Pwm.c **** 	{
 137:../LIB_HW/Hw_Pwm.c **** 		case 0:
 138:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR3 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 132              		.loc 1 138 0
 133 0060 40F23C44 		movw	r4, #1084
 134              	.LBE9:
 135              	.LBE8:
 114:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER,  8 );		// CC3E : Enable
 136              		.loc 1 114 0
 137 0064 40F48075 		orr	r5, r0, #256
 138 0068 1D60     		str	r5, [r3, #0]
 115:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER, 12 );		// CC4E : Enable
 139              		.loc 1 115 0
 140 006a 1D68     		ldr	r5, [r3, #0]
 141              	.LBB13:
 142              	.LBB10:
 139:../LIB_HW/Hw_Pwm.c **** 
 140:../LIB_HW/Hw_Pwm.c **** 		case 1:
 141:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR4 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 143              		.loc 1 141 0
 144 006c 4FF48860 		mov	r0, #1088
 145 0070 C4F20000 		movt	r0, 16384
 146              	.LBE10:
 147              	.LBE13:
 115:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER, 12 );		// CC4E : Enable
 148              		.loc 1 115 0
 149 0074 45F48055 		orr	r5, r5, #4096
 150              	.LBB14:
 151              	.LBB11:
 138:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR3 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 152              		.loc 1 138 0
 153 0078 C4F20004 		movt	r4, 16384
 154              	.LBE11:
 155              	.LBE14:
 115:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CCER, 12 );		// CC4E : Enable
 156              		.loc 1 115 0
 157 007c 1D60     		str	r5, [r3, #0]
 158              	.LVL0:
 159              	.LBB15:
 160              	.LBB12:
 138:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR3 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 161              		.loc 1 138 0
 162 007e 2160     		str	r1, [r4, #0]
 163              		.loc 1 141 0
 164 0080 0160     		str	r1, [r0, #0]
 165              	.LVL1:
 166              	.LBE12:
 167              	.LBE15:
 168              	.LBB16:
 169              	.LBB17:
 170 0082 0160     		str	r1, [r0, #0]
 171              	.LBE17:
 172              	.LBE16:
 120:../LIB_HW/Hw_Pwm.c **** 	SET_BIT( REG_TIM3_CR1, 0 );			// Counter Enable 
 173              		.loc 1 120 0
 174 0084 1168     		ldr	r1, [r2, #0]
 175 0086 41F00103 		orr	r3, r1, #1
 176 008a 1360     		str	r3, [r2, #0]
 121:../LIB_HW/Hw_Pwm.c **** }
 177              		.loc 1 121 0
 178 008c F0BC     		pop	{r4, r5, r6, r7}
 179 008e 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE2:
 183              		.section	.text.Hw_Pwm_Init,"ax",%progbits
 184              		.align	2
 185              		.global	Hw_Pwm_Init
 186              		.thumb
 187              		.thumb_func
 189              	Hw_Pwm_Init:
 190              	.LFB0:
  54:../LIB_HW/Hw_Pwm.c **** {	
 191              		.loc 1 54 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI1:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
  55:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_IO_Setup();
 200              		.loc 1 55 0
 201 0002 40F20003 		movw	r3, #:lower16:Hw_Pwm_IO_Setup
 202 0006 C0F20003 		movt	r3, #:upper16:Hw_Pwm_IO_Setup
 203 000a 9847     		blx	r3
 204              	.LVL2:
  56:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_Timer_Setup();
 205              		.loc 1 56 0
 206 000c 40F20000 		movw	r0, #:lower16:Hw_Pwm_Timer_Setup
 207 0010 C0F20000 		movt	r0, #:upper16:Hw_Pwm_Timer_Setup
 208 0014 8047     		blx	r0
 209              	.LVL3:
 210 0016 08BD     		pop	{r3, pc}
 211              		.cfi_endproc
 212              	.LFE0:
 214              		.section	.text.Hw_Pwm_SetDuty,"ax",%progbits
 215              		.align	2
 216              		.global	Hw_Pwm_SetDuty
 217              		.thumb
 218              		.thumb_func
 220              	Hw_Pwm_SetDuty:
 221              	.LFB3:
 134:../LIB_HW/Hw_Pwm.c **** {
 222              		.loc 1 134 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL4:
 135:../LIB_HW/Hw_Pwm.c **** 	switch( Ch )
 228              		.loc 1 135 0
 229 0000 50B9     		cbnz	r0, .L12
 138:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR3 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 230              		.loc 1 138 0
 231 0002 40F23C43 		movw	r3, #1084
 232 0006 C4F20003 		movt	r3, 16384
 233 000a 1960     		str	r1, [r3, #0]
 234              	.L8:
 235              		.loc 1 141 0
 236 000c 4FF48860 		mov	r0, #1088
 237              	.LVL5:
 238 0010 C4F20000 		movt	r0, 16384
 239 0014 0160     		str	r1, [r0, #0]
 240 0016 7047     		bx	lr
 241              	.LVL6:
 242              	.L12:
 135:../LIB_HW/Hw_Pwm.c **** 	switch( Ch )
 243              		.loc 1 135 0
 244 0018 0128     		cmp	r0, #1
 245 001a F7D0     		beq	.L8
 246 001c 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE3:
 250 001e 00BF     		.section	.text.Hw_Pwm_SetPercent,"ax",%progbits
 251              		.align	2
 252              		.global	Hw_Pwm_SetPercent
 253              		.thumb
 254              		.thumb_func
 256              	Hw_Pwm_SetPercent:
 257              	.LFB4:
 142:../LIB_HW/Hw_Pwm.c **** 	}
 143:../LIB_HW/Hw_Pwm.c **** }
 144:../LIB_HW/Hw_Pwm.c **** 
 145:../LIB_HW/Hw_Pwm.c **** 
 146:../LIB_HW/Hw_Pwm.c **** 
 147:../LIB_HW/Hw_Pwm.c **** 
 148:../LIB_HW/Hw_Pwm.c **** 
 149:../LIB_HW/Hw_Pwm.c **** /*---------------------------------------------------------------------------
 150:../LIB_HW/Hw_Pwm.c ****      TITLE   : Hw_Pwm_SetPercent
 151:../LIB_HW/Hw_Pwm.c ****      WORK    : 
 152:../LIB_HW/Hw_Pwm.c ****      ARG     : void
 153:../LIB_HW/Hw_Pwm.c ****      RET     : void
 154:../LIB_HW/Hw_Pwm.c **** ---------------------------------------------------------------------------*/
 155:../LIB_HW/Hw_Pwm.c **** void Hw_Pwm_SetPercent( u8 Ch, u16 PercentRatio )
 156:../LIB_HW/Hw_Pwm.c **** {
 258              		.loc 1 156 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL7:
 157:../LIB_HW/Hw_Pwm.c **** 	if( PercentRatio > 100 ) PercentRatio = 100;
 158:../LIB_HW/Hw_Pwm.c **** 
 159:../LIB_HW/Hw_Pwm.c **** 	Hw_Pwm_SetDuty( Ch, PercentRatio * HW_PWM_PERIOD / 100 );
 264              		.loc 1 159 0
 265 0000 6429     		cmp	r1, #100
 266 0002 28BF     		it	cs
 267 0004 6421     		movcs	r1, #100
 268              	.LVL8:
 269 0006 01EB8101 		add	r1, r1, r1, lsl #2
 270 000a 4A00     		lsls	r2, r1, #1
 271 000c 91B2     		uxth	r1, r2
 272              	.LVL9:
 273              	.LBB18:
 274              	.LBB19:
 135:../LIB_HW/Hw_Pwm.c **** 	switch( Ch )
 275              		.loc 1 135 0
 276 000e 50B9     		cbnz	r0, .L20
 138:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR3 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 277              		.loc 1 138 0
 278 0010 40F23C43 		movw	r3, #1084
 279 0014 C4F20003 		movt	r3, 16384
 280 0018 1960     		str	r1, [r3, #0]
 281              	.L17:
 141:../LIB_HW/Hw_Pwm.c **** 			REG_TIM3_CCR4 = DutyRatio * HW_PWM_PERIOD / HW_PWM_MAX_DUTY;
 282              		.loc 1 141 0
 283 001a 4FF48860 		mov	r0, #1088
 284              	.LVL10:
 285 001e C4F20000 		movt	r0, 16384
 286 0022 0160     		str	r1, [r0, #0]
 287 0024 7047     		bx	lr
 288              	.LVL11:
 289              	.L20:
 135:../LIB_HW/Hw_Pwm.c **** 	switch( Ch )
 290              		.loc 1 135 0
 291 0026 0128     		cmp	r0, #1
 292 0028 F7D0     		beq	.L17
 293 002a 7047     		bx	lr
 294              	.LBE19:
 295              	.LBE18:
 296              		.cfi_endproc
 297              	.LFE4:
 299              		.text
 300              	.Letext0:
 301              		.file 2 "../LIB_HW/Hw_Define.h"
DEFINED SYMBOLS
<<<<<<< HEAD
                            *ABS*:0000000000000000 usb_int.c
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:19     .text.CTR_LP:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:24     .text.CTR_LP:0000000000000000 CTR_LP
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:295    .text.CTR_LP:00000000000001a0 $d
                            *COM*:0000000000000002 SaveRState
                            *COM*:0000000000000002 SaveTState
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:306    .text.CTR_HP:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:311    .text.CTR_HP:0000000000000000 CTR_HP
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccofNTTj.s:406    .text.CTR_HP:0000000000000078 $d
=======
                            *ABS*:0000000000000000 Hw_Pwm.c
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:19     .text.Hw_Pwm_IO_Setup:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:24     .text.Hw_Pwm_IO_Setup:0000000000000000 Hw_Pwm_IO_Setup
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:63     .text.Hw_Pwm_Timer_Setup:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:68     .text.Hw_Pwm_Timer_Setup:0000000000000000 Hw_Pwm_Timer_Setup
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:184    .text.Hw_Pwm_Init:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:189    .text.Hw_Pwm_Init:0000000000000000 Hw_Pwm_Init
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:215    .text.Hw_Pwm_SetDuty:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:220    .text.Hw_Pwm_SetDuty:0000000000000000 Hw_Pwm_SetDuty
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:251    .text.Hw_Pwm_SetPercent:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccWPrWuf.s:256    .text.Hw_Pwm_SetPercent:0000000000000000 Hw_Pwm_SetPercent
>>>>>>> fdfbab5dfe0750cc005093ae61960dc4965abfc7
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
